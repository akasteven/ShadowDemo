//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
//
//
// Buffer Definitions: 
//
// cbuffer cbNeverChanges
// {
//
//   struct DirectionalLight
//   {
//       
//       float4 Ambient;                // Offset:    0
//       float4 Diffuse;                // Offset:   16
//       float4 Specular;               // Offset:   32
//       float3 Direction;              // Offset:   48
//       float pad;                     // Offset:   60
//
//   } DirLight;                        // Offset:    0 Size:    64
//   float ShadowMapSize;               // Offset:   64 Size:     4
//   float3 pad3;                       // Offset:   68 Size:    12 [unused]
//
// }
//
// cbuffer cbPerFrame
// {
//
//   float3 eyePos;                     // Offset:    0 Size:    12
//   float pad;                         // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer cbPerObject
// {
//
//   float4x4 matWorld;                 // Offset:    0 Size:    64 [unused]
//   float4x4 matWVP;                   // Offset:   64 Size:    64 [unused]
//   
//   struct Material
//   {
//       
//       float4 Ambient;                // Offset:  128
//       float4 Diffuse;                // Offset:  144
//       float4 Specular;               // Offset:  160
//       float4 Reflect;                // Offset:  176
//
//   } material;                        // Offset:  128 Size:    64
//   float4x4 matWorldInvTranspose;     // Offset:  192 Size:    64 [unused]
//   float4x4 lightWVPT;                // Offset:  256 Size:    64 [unused]
//   int isInstancing;                  // Offset:  320 Size:     4 [unused]
//   float3 padding;                    // Offset:  324 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// samShadowMap                    sampler_c      NA          NA    1        1
// txShadowMap                       texture  float4          2d    2        1
// cbNeverChanges                    cbuffer      NA          NA    0        1
// cbPerFrame                        cbuffer      NA          NA    2        1
// cbPerObject                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[11], immediateIndexed
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_temps 14
dcl_indexableTemp x0[9], 4
//
// Initial variable locations:
//   v0.x <- input.PosH.x; v0.y <- input.PosH.y; v0.z <- input.PosH.z; v0.w <- input.PosH.w; 
//   v1.x <- input.PosW.x; v1.y <- input.PosW.y; v1.z <- input.PosW.z; 
//   v2.x <- input.NorW.x; v2.y <- input.NorW.y; v2.z <- input.NorW.z; 
//   v3.x <- input.ShadowH.x; v3.y <- input.ShadowH.y; v3.z <- input.ShadowH.z; v3.w <- input.ShadowH.w; 
//   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
//
#line 99 "D:\Projects\Demo\ShadowDemo\ShadowDemo\Shaders\DemoShader.hlsl"
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx  // r0.x <- input.NorW.x; r0.y <- input.NorW.y; r0.z <- input.NorW.z
mov r1.xyz, -v1.xyzx
add r1.xyz, r1.xyzx, cb2[0].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w  // r0.w <- distToEye
div r1.xyz, r1.xyzx, r0.wwww

#line 105
nop 
nop 
nop 
mov r2.xyzw, v3.xyzw

#line 57
div r2.xyz, r2.zxyz, r2.wwww  // r2.x <- shadowPosH.z; r2.y <- shadowPosH.x; r2.z <- shadowPosH.y

#line 60
mov r2.x, r2.x  // r2.x <- depth

#line 63
div r3.y, l(1.000000), cb0[4].x  // r3.y <- dx
mov r0.w, l(0)  // r0.w <- percentLit
mov r4.x, -r3.y
mov r4.y, -r3.y
mov r5.y, -r3.y
mov r3.x, -r3.y
mov r6.x, -r3.y
mov r7.x, -r3.y
mov r7.y, r3.y
mov r3.w, r3.y
mov x0[0].xy, r4.xyxx
mov r5.x, l(0)
mov x0[1].xy, r5.xyxx
mov x0[2].xy, r3.yxyy
mov r6.y, l(0)
mov x0[3].xy, r6.xyxx
mov x0[4].xy, l(0,0,0,0)
mov r3.z, l(0)
mov x0[5].xy, r3.yzyy
mov x0[6].xy, r7.xyxx
mov r3.x, l(0)
mov x0[7].xy, r3.xyxx
mov x0[8].xy, r3.ywyy

#line 76
mov r3.xy, x0[0].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[1].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[2].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[3].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[4].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[5].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[6].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[7].xyxx
add r3.xy, r2.yzyy, r3.xyxx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w
mov r3.xy, x0[8].xyxx
add r2.yz, r2.yyzy, r3.xxyx
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.yzyy, t2.xxxx, s1, r2.x
add r0.w, r0.w, r1.w

#line 80
div r0.w, r0.w, l(9.000000)
mov r0.w, r0.w  // r0.w <- <ShadowFactorPCF return value>

#line 105
mov r0.w, r0.w  // r0.w <- PCF
mov r2.xyz, l(0,0,0,0)  // r2.x <- ambient.x; r2.y <- ambient.y; r2.z <- ambient.z
mov r3.xyz, l(0,0,0,0)  // r3.x <- diffuse.x; r3.y <- diffuse.y; r3.z <- diffuse.z
mov r4.xyz, l(0,0,0,0)  // r4.x <- specular.x; r4.y <- specular.y; r4.z <- specular.z

#line 112
nop 
mov r5.xyz, cb3[8].xyzx
mov r6.xyz, cb3[9].xyzx
mov r7.xyzw, cb3[10].xyzw
mov r8.xyz, cb0[0].xyzx
mov r9.xyz, cb0[1].xyzx
mov r10.xyz, cb0[2].xyzx
mov r11.xyz, cb0[3].xyzx
mov r0.xyz, r0.xyzx
mov r1.xyz, r1.xyzx

#line 17 "D:\Projects\Demo\ShadowDemo\ShadowDemo\Shaders\SimpleLighting.hlsl"
mov r12.xyz, l(0,0,0,0)  // r12.x <- diffuse.x; r12.y <- diffuse.y; r12.z <- diffuse.z
mov r13.xyz, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z

#line 21
mov r11.xyz, -r11.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z

#line 24
mul r5.xyz, r5.xyzx, r8.xyzx  // r5.x <- ambient.x; r5.y <- ambient.y; r5.z <- ambient.z

#line 29
dp3 r1.w, r11.xyzx, r0.xyzx  // r1.w <- diffuseFactor

#line 33
lt r2.w, l(0.000000), r1.w
mov r8.xyz, -r11.xyzx
dp3 r3.w, r8.xyzx, r0.xyzx
add r3.w, r3.w, r3.w
mov r3.w, -r3.w
mul r0.xyz, r0.xyzx, r3.wwww
add r0.xyz, r8.xyzx, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z
dp3 r0.x, r0.xyzx, r1.xyzx
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, r7.w
exp r0.x, r0.x  // r0.x <- specFactor
mul r1.xyz, r6.xyzx, r1.wwww
mul r1.xyz, r9.xyzx, r1.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
mul r0.xyz, r7.xyzx, r0.xxxx
mul r0.xyz, r10.xyzx, r0.xyzx  // r0.x <- spec.x; r0.y <- spec.y; r0.z <- spec.z
movc r1.xyz, r2.wwww, r1.xyzx, r12.xyzx
movc r0.xyz, r2.wwww, r0.xyzx, r13.xyzx

#line 112 "D:\Projects\Demo\ShadowDemo\ShadowDemo\Shaders\DemoShader.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- A.x; r5.y <- A.y; r5.z <- A.z
mov r1.xyz, r1.xyzx  // r1.x <- D.x; r1.y <- D.y; r1.z <- D.z
mov r0.xyz, r0.xyzx  // r0.x <- S.x; r0.y <- S.y; r0.z <- S.z
add r2.xyz, r2.xyzx, r5.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
mul r0.xyz, r0.wwww, r0.xyzx
add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- specular.x; r0.y <- specular.y; r0.z <- specular.z
add r1.xyz, r1.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
mov r0.w, l(1.000000)  // r0.w <- litColor.w
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 126 instruction slots used
